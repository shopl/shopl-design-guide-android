name: Maven Central 배포

#on:
#  pull_request:
#    types: [closed]
#    branches:
#      - main
on:
  push:
    branches:
      - document/scott/SH-11796-deploy-automation

jobs:
  publish:
    #    if: |
    #      github.event.pull_request.merged == true &&
    #      (
    #        contains(join(github.event.pull_request.labels.*.name, ','), 'major') ||
    #        contains(join(github.event.pull_request.labels.*.name, ','), 'minor') ||
    #        contains(join(github.event.pull_request.labels.*.name, ','), 'patch')
    #      )
    runs-on: ubuntu-latest

    steps:
      - name: Slack Notify Build Start
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: "SDG 빌드"
          SLACK_MESSAGE: |
            :rocket: *[빌드 시작]*  
            브랜치: ${{ github.ref }}
            커밋: ${{ github.sha }}
            실행자: ${{ github.actor }}
          SLACK_COLOR: '#CCCCFF'

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Restore secring.gpg
        run: |
          echo "${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}" | base64 --decode > ./secring.gpg

      - name: Create local gradle.properties with secrets
        run: |
          echo "mavenCentralUsername=${{ secrets.MAVEN_CENTRAL_USER_NAME }}" >> ./gradle.properties
          echo "mavenCentralPassword=${{ secrets.MAVEN_CENTRAL_PASSWORD }}" >> ./gradle.properties
          echo "signing.keyId=${{ secrets.SIGNING_KEY_ID }}" >> ./gradle.properties
          echo "signing.password=${{ secrets.SIGNING_PASSWORD }}" >> ./gradle.properties
          echo "signing.secretKeyRingFile=$(pwd)/secring.gpg" >> gradle.properties

      - name: Publish to Maven Central
        working-directory: .
        run: ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache

      - name: Slack Notify Build Success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: "SDG 빌드"
          SLACK_MESSAGE: |
            :white_check_mark: *[빌드 성공]*  
            브랜치: ${{ github.ref }}
            커밋: ${{ github.sha }}
            실행자: ${{ github.actor }}
          SLACK_COLOR: '#00C851'

      - name: Slack Notify Build Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: "SDG 빌드"
          SLACK_MESSAGE: |
            :x: *[빌드 실패]*  
            브랜치: ${{ github.ref }}
            커밋: ${{ github.sha }}
            실행자: ${{ github.actor }}
          SLACK_COLOR: '#ff4444'

      - name: Extract version from PublishingConfig.kt
        id: extract_version
        if: success()
        run: |
          VERSION=$(grep -m1 'VERSION' build-logic/src/main/kotlin/com/shopl/sdg/build_logic/PublishingConfig.kt \
                    | sed 's/.*VERSION *= *"\([0-9]\+\.[0-9]\+\.[0-9]\+\)".*/\1/')
          echo "artifact_version=$VERSION" >> $GITHUB_OUTPUT

      - name: Wait for Maven Central sync (polling)
        id: central_polling
        if: success()
        env:
          ARTIFACT: "com.shoplworks:SDG-Android:${{ steps.extract_version.outputs.artifact_version }}"
        run: |
          for i in {1..20}; do
            sleep 30
            if curl -s "https://central.sonatype.com/api/v1/search?q=$ARTIFACT" | grep -q "$ARTIFACT"; then
              echo "$ARTIFACT is now available on Maven Central!"
              exit 0
            else
              echo "Not yet available. Retrying..."
            fi
          done
          echo "Timeout: $ARTIFACT not found on Maven Central after 10 minutes."
          exit 1

      - name: Slack Notify Central 등록 완료
        if: ${{ steps.central_polling.conclusion == 'success' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: "SDG Maven 등재"
          SLACK_MESSAGE: |
            :star: *[Maven Central 등재 완료]*  
            `${{ env.ARTIFACT }}` 이(가) 중앙 저장소에 등록되었습니다!
          SLACK_COLOR: '#00c6ad'

      - name: Slack Notify Central 등록 실패/지연
        if: ${{ steps.central_polling.conclusion == 'failure' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: "SDG Maven 등재"
          SLACK_MESSAGE: |
            :warning: *[Maven Central 동기화 실패/지연]*  
            `${{ env.ARTIFACT }}` 등재가 10분 내 확인되지 않습니다.
          SLACK_COLOR: '#ffa726'

      - name: Cleanup
        run: rm -f ./secring.gpg